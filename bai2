import numpy as np
import skfuzzy as fuzz
from skfuzzy import control as ctrl

blood_sugar_level = ctrl.Antecedent(np.arange(50, 250, 1), 'blood_sugar_level')
bmi = ctrl.Antecedent(np.arange(10, 40, 1), 'bmi')
frequent_urination = ctrl.Antecedent(np.arange(0, 10, 1), 'frequent_urination')
fatigue_level = ctrl.Antecedent(np.arange(0, 10, 1), 'fatigue_level')
diabetes_risk_level = ctrl.Consequent(np.arange(0, 100, 1), 'diabetes_risk_level')

blood_sugar_level['low'] = fuzz.trimf(blood_sugar_level.universe, [50, 80, 120])
blood_sugar_level['normal'] = fuzz.trimf(blood_sugar_level.universe, [80, 120, 160])
blood_sugar_level['high'] = fuzz.trimf(blood_sugar_level.universe, [120, 160, 200])
blood_sugar_level['very_high'] = fuzz.trimf(blood_sugar_level.universe, [160, 200, 250])

bmi['underweight'] = fuzz.trimf(bmi.universe, [10, 15, 18.5])
bmi['normal'] = fuzz.trimf(bmi.universe, [18.5, 22, 24.9])
bmi['overweight'] = fuzz.trimf(bmi.universe, [24.9, 28, 30])
bmi['obese'] = fuzz.trimf(bmi.universe, [30, 35, 40])

frequent_urination['rarely'] = fuzz.trimf(frequent_urination.universe, [0, 1, 3])
frequent_urination['sometimes'] = fuzz.trimf(frequent_urination.universe, [2, 4, 6])
frequent_urination['often'] = fuzz.trimf(frequent_urination.universe, [5, 7, 10])

fatigue_level['low'] = fuzz.trimf(fatigue_level.universe, [0, 2, 4])
fatigue_level['moderate'] = fuzz.trimf(fatigue_level.universe, [3, 5, 7])
fatigue_level['high'] = fuzz.trimf(fatigue_level.universe, [6, 8, 10])

diabetes_risk_level['low'] = fuzz.trimf(diabetes_risk_level.universe, [0, 20, 40])
diabetes_risk_level['medium'] = fuzz.trimf(diabetes_risk_level.universe, [30, 50, 70])
diabetes_risk_level['high'] = fuzz.trimf(diabetes_risk_level.universe, [60, 80, 80])
diabetes_risk_level['very_high'] = fuzz.trimf(diabetes_risk_level.universe, [60, 80, 100])

rule1 = ctrl.Rule(blood_sugar_level['very_high'] & frequent_urination['often'], diabetes_risk_level ['very_high'])
rule2 = ctrl.Rule(blood_sugar_level['very_high'] & frequent_urination['sometimes'], diabetes_risk_level ['high'])
rule3 = ctrl.Rule(blood_sugar_level['high'] & frequent_urination['often'], diabetes_risk_level ['high'])
rule4 = ctrl.Rule(blood_sugar_level['normal'] & frequent_urination['rarely'], diabetes_risk_level ['low'])

rule5 = ctrl.Rule(blood_sugar_level['very_high'] & bmi['obese'], diabetes_risk_level['very_high'])
rule6 = ctrl.Rule(blood_sugar_level['very_high'] & bmi['overweight'], diabetes_risk_level['high'])
rule7 = ctrl.Rule(blood_sugar_level['high'] & bmi['overweight'], diabetes_risk_level['high'])
rule8 = ctrl.Rule(blood_sugar_level['high'] & bmi['overweight'], diabetes_risk_level['medium'])
rule9 = ctrl.Rule(blood_sugar_level['normal'] & bmi['normal'], diabetes_risk_level['low'])

rule10 = ctrl.Rule(blood_sugar_level['very_high'] & fatigue_level['high'], diabetes_risk_level['very_high'])
rule11 = ctrl.Rule(blood_sugar_level['high'] & fatigue_level['high'], diabetes_risk_level['high'])
rule12 = ctrl.Rule(blood_sugar_level['high'] & fatigue_level['moderate'], diabetes_risk_level['medium'])
rule13 = ctrl.Rule(blood_sugar_level['normal'] & fatigue_level['low'], diabetes_risk_level['low'])

risk_ctrl = ctrl.ControlSystem([rule1, rule2, rule3, rule4, rule5, rule6, rule7, rule8])
risk_simulation = ctrl.ControlSystemSimulation(risk_ctrl)

blood_sugar_level.view()
bmi.view()
frequent_urination.view()
fatigue_level.view
diabetes_risk_level.view()
![image](https://github.com/user-attachments/assets/058e47c7-4ecb-4e16-b61b-e74b46417b47)
